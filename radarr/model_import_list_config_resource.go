/*
Radarr

Radarr API docs

API version: v5.26.2.10099
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radarr

import (
	"encoding/json"
)

// checks if the ImportListConfigResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportListConfigResource{}

// ImportListConfigResource struct for ImportListConfigResource
type ImportListConfigResource struct {
	Id *int32 `json:"id,omitempty"`
	ListSyncLevel NullableString `json:"listSyncLevel,omitempty"`
}

// NewImportListConfigResource instantiates a new ImportListConfigResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportListConfigResource() *ImportListConfigResource {
	this := ImportListConfigResource{}
	return &this
}

// NewImportListConfigResourceWithDefaults instantiates a new ImportListConfigResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportListConfigResourceWithDefaults() *ImportListConfigResource {
	this := ImportListConfigResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImportListConfigResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportListConfigResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImportListConfigResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ImportListConfigResource) SetId(v int32) {
	o.Id = &v
}

// GetListSyncLevel returns the ListSyncLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportListConfigResource) GetListSyncLevel() string {
	if o == nil || IsNil(o.ListSyncLevel.Get()) {
		var ret string
		return ret
	}
	return *o.ListSyncLevel.Get()
}

// GetListSyncLevelOk returns a tuple with the ListSyncLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportListConfigResource) GetListSyncLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListSyncLevel.Get(), o.ListSyncLevel.IsSet()
}

// HasListSyncLevel returns a boolean if a field has been set.
func (o *ImportListConfigResource) HasListSyncLevel() bool {
	if o != nil && o.ListSyncLevel.IsSet() {
		return true
	}

	return false
}

// SetListSyncLevel gets a reference to the given NullableString and assigns it to the ListSyncLevel field.
func (o *ImportListConfigResource) SetListSyncLevel(v string) {
	o.ListSyncLevel.Set(&v)
}
// SetListSyncLevelNil sets the value for ListSyncLevel to be an explicit nil
func (o *ImportListConfigResource) SetListSyncLevelNil() {
	o.ListSyncLevel.Set(nil)
}

// UnsetListSyncLevel ensures that no value is present for ListSyncLevel, not even an explicit nil
func (o *ImportListConfigResource) UnsetListSyncLevel() {
	o.ListSyncLevel.Unset()
}

func (o ImportListConfigResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportListConfigResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ListSyncLevel.IsSet() {
		toSerialize["listSyncLevel"] = o.ListSyncLevel.Get()
	}
	return toSerialize, nil
}

type NullableImportListConfigResource struct {
	value *ImportListConfigResource
	isSet bool
}

func (v NullableImportListConfigResource) Get() *ImportListConfigResource {
	return v.value
}

func (v *NullableImportListConfigResource) Set(val *ImportListConfigResource) {
	v.value = val
	v.isSet = true
}

func (v NullableImportListConfigResource) IsSet() bool {
	return v.isSet
}

func (v *NullableImportListConfigResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportListConfigResource(val *ImportListConfigResource) *NullableImportListConfigResource {
	return &NullableImportListConfigResource{value: val, isSet: true}
}

func (v NullableImportListConfigResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportListConfigResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


